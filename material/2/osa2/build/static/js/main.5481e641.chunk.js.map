{"version":3,"sources":["components/Note.js","services/notes.js","App.js","index.js"],"names":["Note","_ref","note","toggleImportance","label","important","react_default","a","createElement","className","content","onClick","notes","getAll","request","axios","get","nonExisting","id","date","then","response","data","concat","create","newObject","post","update","put","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","addNote","event","preventDefault","noteObject","state","newNote","Date","Math","random","noteService","setState","toggleImportanceOf","find","n","changedNote","objectSpread","filter","catch","error","setTimeout","handleNoteChange","console","log","target","value","toggleVisible","showAll","_this2","_this3","notesToShow","App_Notification","message","map","components_Note","key","onSubmit","onChange","type","React","Component","Notification","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.5481e641.chunk.js","sourcesContent":["import React from 'react'\n\nconst Note = ({ note, toggleImportance}) => {\n  const label = note.important ? 'make not important' : 'make important'\n  return (\n    <li className=\"note\">\n      {note.content} <button onClick={toggleImportance}>{label}</button>\n    </li>\n  )\n}\n\nexport default Note\n","import axios from 'axios'\nconst baseUrl = '/api/notes'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  const nonExisting = {\n    id: 10000,\n    content: 'Tätä muistiinpanoa ei ole palvelimelta',\n    date: '2017-12-10T17:30:31.098Z',\n    important: true\n  }\n  return request.then(response => response.data.concat(nonExisting))\n}\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update }\n","import React from 'react'\nimport Note from './components/Note'\nimport noteService from './services/notes'\nimport './index.css'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      notes: [],\n      newNote: '',\n      showAll: true,\n      error: null\n    }\n    console.log('constructor')\n  }\n\n  componentDidMount() {\n    noteService\n      .getAll()\n      .then(notes => {\n        this.setState({ notes })\n      })\n  }\n\n  addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: this.state.newNote,\n      date: new Date(),\n      important: Math.random() > 0.5\n    }\n\n    noteService\n      .create(noteObject)\n      .then(newNote => {\n        this.setState({\n          notes: this.state.notes.concat(newNote),\n          newNote: ''\n        })\n      })\n  }\n\n  toggleImportanceOf = (id) => {\n    return () => {\n      const note = this.state.notes.find(n => n.id === id)\n      const changedNote = { ...note, important: !note.important }\n      noteService\n        .update(id, changedNote)\n        .then(changedNote => {\n          const notes = this.state.notes.filter(n => n.id !== id)\n          this.setState({\n            notes: notes.concat(changedNote)\n          })\n        })\n        .catch(error => {\n          this.setState({\n            error: `muistiinpano '${note.content}' on jo valitettavasti poistettu palvelimelta`,\n            notes: this.state.notes.filter(n => n.id !== id)\n          })\n          setTimeout(() => {\n            this.setState({error: null})\n          }, 5000)\n        })\n    }\n  }\n\n  handleNoteChange = (event) => {\n    console.log(event.target.value)\n    this.setState({ newNote: event.target.value })\n  }\n\n  toggleVisible = () => {\n    this.setState({ showAll: !this.state.showAll })\n  }\n\n  render() {\n    console.log('render')\n    const notesToShow =\n      this.state.showAll ?\n        this.state.notes :\n        this.state.notes.filter(note => note.important)\n\n    const label = this.state.showAll ? 'vain tärkeät' : 'kaikki'\n\n    return (\n      <div>\n        <h1>Muistiinpanot</h1>\n\n        <Notification message={this.state.error} />\n        <div>\n          <button onClick={this.toggleVisible}>\n            näytä {label}\n          </button>\n        </div>\n\n        <ul>\n          {notesToShow.map(note =>\n            <Note\n              key={note.id}\n              note={note}\n              toggleImportance={this.toggleImportanceOf(note.id)}\n            />\n          )}\n        </ul>\n        <form onSubmit={this.addNote}>\n          <input\n            value={this.state.newNote}\n            onChange={this.handleNoteChange} />\n          <button type=\"submit\">tallenna</button>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}